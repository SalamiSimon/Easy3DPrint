<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Xarial.XCad.SolidWorks</name>
    </assembly>
    <members>
        <member name="T:Xarial.XCad.SolidWorks.Annotations.SwMacroFeatureDimension">
            <summary>
            This is a specific dimension related to a macro feature
            </summary>
        </member>
        <member name="P:Xarial.XCad.SolidWorks.Annotations.SwMacroFeatureDimension.Value">
            <summary>
            Macro feature dimensions are managing thei rvalues in the different way. The dimension will always be attached to the correct configuration
            Attempt to read the dimension value from the specific configuration with GetSystemValue3 method may result in 0 value for the multi-part configuration
            </summary>
        </member>
        <member name="T:Xarial.XCad.SolidWorks.Attributes.PartnerProductAttribute">
            <summary>
            Registers add-in as the SOLIDWORKS partner product
            </summary>
        </member>
        <member name="P:Xarial.XCad.SolidWorks.Attributes.PartnerProductAttribute.PartnerKey">
            <summary>
            Partner key of the product
            </summary>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.Attributes.PartnerProductAttribute.#ctor(System.String)">
            <summary>
            Default constructor
            </summary>
            <param name="partnerKey">Partner key of the product</param>
        </member>
        <member name="T:Xarial.XCad.SolidWorks.Data.Helpers.CustomPropertyChangeAction_e">
            <summary>
            Type of the modification action on custom properties
            </summary>
        </member>
        <member name="F:Xarial.XCad.SolidWorks.Data.Helpers.CustomPropertyChangeAction_e.Add">
            <summary>
            New custom property is added
            </summary>
        </member>
        <member name="F:Xarial.XCad.SolidWorks.Data.Helpers.CustomPropertyChangeAction_e.Delete">
            <summary>
            Custom property is removed
            </summary>
        </member>
        <member name="F:Xarial.XCad.SolidWorks.Data.Helpers.CustomPropertyChangeAction_e.Modify">
            <summary>
            Custom property value is changed
            </summary>
        </member>
        <member name="T:Xarial.XCad.SolidWorks.Data.Helpers.CustomPropertyModifyData">
            <summary>
            Custom Property modification data
            </summary>
        </member>
        <member name="P:Xarial.XCad.SolidWorks.Data.Helpers.CustomPropertyModifyData.Action">
            <summary>
            Type of the modification
            </summary>
        </member>
        <member name="P:Xarial.XCad.SolidWorks.Data.Helpers.CustomPropertyModifyData.Name">
            <summary>
            Name of the custom property
            </summary>
        </member>
        <member name="P:Xarial.XCad.SolidWorks.Data.Helpers.CustomPropertyModifyData.ConfigurationName">
            <summary>
            Configuration of custom property. Empty string for the file specific (generic) custom property
            </summary>
        </member>
        <member name="P:Xarial.XCad.SolidWorks.Data.Helpers.CustomPropertyModifyData.Value">
            <summary>
            Value of the custom property
            </summary>
        </member>
        <member name="T:Xarial.XCad.SolidWorks.Data.Helpers.CustomPropertyModifyDelegate">
            <summary>
            Delegate of <see cref="!:DocumentHandler.CustomPropertyModify"/> event
            </summary>
            <param name="docHandler">Document Handler which sends this notification</param>
            <param name="modifications">Array of all modifications in custom properties</param>
        </member>
        <member name="T:Xarial.XCad.SolidWorks.Documents.Exceptions.DefaultTemplateNotFoundException">
            <summary>
            Indicates that the default templaet cannot be found for the next document
            </summary>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.Documents.Exceptions.DefaultTemplateNotFoundException.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Xarial.XCad.SolidWorks.Documents.Exceptions.DirtyFlagIsNotSetException">
            <summary>
            Indicates that document cannot be set to dirty
            </summary>
        </member>
        <member name="T:Xarial.XCad.SolidWorks.Documents.Exceptions.InvalidFlatPatternConfigurationException">
            <summary>
            Inidicatest that flat pattern view does not refer the correct configuration
            </summary>
        </member>
        <member name="T:Xarial.XCad.SolidWorks.Documents.Exceptions.NewDocumentCreateException">
            <summary>
            Exception indicates that new document cannot be created
            </summary>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.Documents.Exceptions.NewDocumentCreateException.#ctor(System.String)">
            <summary>
            Default constructor
            </summary>
            <param name="templateName">Name of the document template</param>
        </member>
        <member name="P:Xarial.XCad.SolidWorks.Documents.ISwComponent.CachedPath">
            <summary>
            Returns the cached path of the component as stored in SOLIDWORKS
            </summary>
            <remarks>This path might not correspond to actual file if component is not resolved or document is opened in view only mode. <see cref="!:IXComponent.Path"/> will return the resolved path</remarks>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.Documents.SwComponentCollectionExtension.PreCreateFromPath(Xarial.XCad.SolidWorks.Documents.ISwComponentCollection,System.String)">
            <summary>
            Pre creates new component from path
            </summary>
            <param name="docsColl">Documents collection</param>
            <param name="path"></param>
            <returns>Pre-created document</returns>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.Documents.ISwDocument.CreateObjectFromDispatch``1(System.Object)">
            <summary>
            Creates xCAD object from a SOLIDWORKS dispatch object
            </summary>
            <typeparam name="TObj">Type of xCAD object</typeparam>
            <param name="disp">SOLIDWORKS specific COM object instance</param>
            <returns>xCAD object</returns>
        </member>
        <member name="F:Xarial.XCad.SolidWorks.Documents.SwDocument.m_CachedFilePath">
            <summary>
            This is a fallback file path in case the COM pointer to this document is broken (e.g. file is closed or SW is closed)
            </summary>
        </member>
        <member name="T:Xarial.XCad.SolidWorks.Documents.SwDocumentCollectionExtension">
            <summary>
            Additional methods for documents collections
            </summary>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.Documents.SwDocumentCollectionExtension.PreCreateFromPath(Xarial.XCad.SolidWorks.Documents.ISwDocumentCollection,System.String)">
            <summary>
            Pre creates new document from path
            </summary>
            <param name="docsColl">Documents collection</param>
            <param name="path"></param>
            <returns>Pre-created document</returns>
        </member>
        <member name="T:Xarial.XCad.SolidWorks.Documents.ISwDocumentEvaluation">
            <inheritdoc/>
        </member>
        <member name="T:Xarial.XCad.SolidWorks.Documents.ISwDocumentGraphics">
            <inheritdoc/>
        </member>
        <member name="T:Xarial.XCad.SolidWorks.Documents.SwFlatPatternDrawingView.MultiBodyFlatPatternActivator">
            <summary>
            This helper service allows to handle flat pattern creation of mutli-body sheet metal parts
            </summary>
            <remarks>SOLIDWORKS API does not support this directly</remarks>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.Documents.SwModelView.ZoomToBox(Xarial.XCad.Geometry.Structures.Box3D)">
            <inheritdoc/>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.Documents.SwModelView.ZoomToFit">
            <inheritdoc/>
        </member>
        <member name="F:Xarial.XCad.SolidWorks.Documents.SwSheetsCache.m_TemplatePlaceholderSheet">
            <summary>
            This is a placeholder for a sheet(s) which already present in the template
            </summary>
            <remarks>Drawing will always contain at least one sheet so this is returned if no user sheets are found</remarks>
        </member>
        <member name="T:Xarial.XCad.SolidWorks.Exceptions.MacroEntryPointNotFoundException">
            <summary>
            Indicates that specified entry point to run the macro is not found
            </summary>
        </member>
        <member name="T:Xarial.XCad.SolidWorks.Exceptions.MacroFileNotFoundException">
            <summary>
            Indicates that macro file is not found
            </summary>
        </member>
        <member name="T:Xarial.XCad.SolidWorks.Exceptions.MacroHasNoEntryPointsException">
            <summary>
            Indicates that macro contains no entry points
            </summary>
        </member>
        <member name="T:Xarial.XCad.SolidWorks.Exceptions.UnknownMacroRunFailedException">
            <summary>
            This error indicates that macro failed to run with unknown reason
            </summary>
            <remarks>This error migth indicate that the process now is corrupted</remarks>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.Exceptions.UnknownMacroRunFailedException.#ctor(System.String)">
            <summary>
            Default constructor
            </summary>
            <param name="path">Path to the macro</param>
        </member>
        <member name="T:Xarial.XCad.SolidWorks.Features.CustomFeature.Delegates.PostRebuildMacroFeatureDelegate">
            <summary>
            Delegate of <see cref="E:Xarial.XCad.SolidWorks.Features.CustomFeature.SwMacroFeatureDefinition.PostRebuild"/> event
            </summary>
            <param name="app">Application</param>
            <param name="model">Document</param>
            <param name="feature">Feature</param>
        </member>
        <member name="T:Xarial.XCad.SolidWorks.Features.CustomFeature.Delegates.PostRebuildMacroFeatureDelegate`1">
            <inheritdoc/>
            <param name="parameters">Parameters</param>
        </member>
        <member name="P:Xarial.XCad.SolidWorks.Features.CustomFeature.SwMacroFeature`1.UseCachedParameters">
            <summary>
            Indicates that the parameters should be read from the cache
            </summary>
            <remarks>This is used when consumer will be accessing the parameters multiple time
            and macro feature definition is not changed during this time (e.g. while regenerating)</remarks>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.Features.CustomFeature.SwMacroFeature`1.UpdateParameters(SolidWorks.Interop.sldworks.IMacroFeatureData,System.String[],System.Int32[],System.String[])">
            <summary>
            Parameters are not updated when SetParameters is called from OnRebuild method, updating one by one fixes the issue
            </summary>
        </member>
        <member name="T:Xarial.XCad.SolidWorks.Features.CustomFeature.SwMacroFeatureDefinition">
            <inheritdoc/>
        </member>
        <member name="E:Xarial.XCad.SolidWorks.Features.CustomFeature.SwMacroFeatureDefinition.PostRebuild">
            <summary>
            Called when macro feature is rebuild
            </summary>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.Features.CustomFeature.SwMacroFeatureDefinition.OnUpdateState(Xarial.XCad.SolidWorks.ISwApplication,Xarial.XCad.SolidWorks.Documents.ISwDocument,Xarial.XCad.SolidWorks.Features.CustomFeature.ISwMacroFeature)">
            <summary>
            This handle is called everytime macro feature needs to update the state
            </summary>
            <param name="app">Application</param>
            <param name="model">Document</param>
            <param name="feature">Feature to update state</param>
            <returns></returns>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.Features.CustomFeature.SwMacroFeatureDefinition.OnConfigureServices(Xarial.XCad.IXServiceCollection)">
            <summary>
            Register Dependency Injection services
            </summary>
            <param name="svcColl">Services collection</param>
            <remarks>Typically add-in is loaded before the instance of the macro feature definition service is created
            In this case macro feature services will inherit services configured within the <see cref="T:Xarial.XCad.SolidWorks.ISwApplication"/> and <see cref="T:Xarial.XCad.SolidWorks.SwAddInEx"/> and overriding of this method or handling the <see cref="E:Xarial.XCad.SolidWorks.Features.CustomFeature.SwMacroFeatureDefinition.ConfigureServices"/> event is not required
            However macro feature definition is independent COM server which means it can be loaded without the add-in. In this case add-in services will not be automatically inherited
            It is recommended to haev independent helper class which registers all services and shares between the <see cref="T:Xarial.XCad.SolidWorks.ISwApplication"/>, <see cref="T:Xarial.XCad.SolidWorks.SwAddInEx"/> and <see cref="T:Xarial.XCad.SolidWorks.Features.CustomFeature.SwMacroFeatureDefinition"/></remarks>
        </member>
        <member name="T:Xarial.XCad.SolidWorks.Features.CustomFeature.SwMacroFeatureDefinition`1">
            <inheritdoc/>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.Features.CustomFeature.SwMacroFeatureDefinition`1.OnRebuild(Xarial.XCad.SolidWorks.ISwApplication,Xarial.XCad.SolidWorks.Documents.ISwDocument,Xarial.XCad.SolidWorks.Features.CustomFeature.ISwMacroFeature{`0},Xarial.XCad.Features.CustomFeature.Delegates.AlignDimensionDelegate{`0}@)">
            <inheritdoc/>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.Features.CustomFeature.SwMacroFeatureDefinition`1.OnRebuild(Xarial.XCad.SolidWorks.ISwApplication,Xarial.XCad.SolidWorks.Documents.ISwDocument,Xarial.XCad.SolidWorks.Features.CustomFeature.ISwMacroFeature)">
            <inheritdoc/>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.Features.CustomFeature.SwMacroFeatureDefinition`1.OnEditDefinition(Xarial.XCad.SolidWorks.ISwApplication,Xarial.XCad.SolidWorks.Documents.ISwDocument,Xarial.XCad.SolidWorks.Features.CustomFeature.ISwMacroFeature{`0})">
            <inheritdoc/>
        </member>
        <member name="T:Xarial.XCad.SolidWorks.Features.CustomFeature.SwMacroFeatureDefinition`2">
            <inheritdoc/>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.Features.CustomFeature.SwMacroFeatureDefinition`2.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Xarial.XCad.SolidWorks.Features.CustomFeature.SwMacroFeatureDefinition`2.EditorBehavior">
            <summary>
            Behavior of macro feature editor
            </summary>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.Features.CustomFeature.SwMacroFeatureDefinition`2.HandleEditingException(Xarial.XCad.Features.CustomFeature.IXCustomFeature{`0},System.Exception)">
            <summary>
            Override this method to handle the exception reading the macro feature parameters on editing of the macro feature
            </summary>
            <param name="feat">Feature being edited</param>
            <param name="ex">Exception</param>
            <returns>Parameters to use for feature editing</returns>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.Features.CustomFeature.SwMacroFeatureDefinition`2.ShouldUpdatePreview(`0,`0,`1,System.Boolean)">
            <summary>
            Checks if the preview should be updated
            </summary>
            <param name="oldData">Old parameters</param>
            <param name="newData">New parameters</param>
            <param name="page">Current page data</param>
            <param name="dataChanged">Indicates if the parameters of the data have changed</param>
            <remarks>This method is called everytime property manager page data is changed, however this is not always require preview update</remarks>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.Features.CustomFeature.SwMacroFeatureDefinition`2.CreatePageHandler">
            <summary>
            Create custom page handler
            </summary>
            <returns>Page handler</returns>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.Features.CustomFeature.SwMacroFeatureDefinition`2.ConvertPageToParams(Xarial.XCad.IXApplication,Xarial.XCad.Documents.IXDocument,`1,`0)">
            <inheritdoc/>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.Features.CustomFeature.SwMacroFeatureDefinition`2.ConvertParamsToPage(Xarial.XCad.IXApplication,Xarial.XCad.Documents.IXDocument,`0)">
            <inheritdoc/>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.Features.CustomFeature.SwMacroFeatureDefinition`2.CreateGeometry(Xarial.XCad.SolidWorks.ISwApplication,Xarial.XCad.SolidWorks.Documents.ISwDocument,Xarial.XCad.SolidWorks.Features.CustomFeature.ISwMacroFeature{`0},Xarial.XCad.Features.CustomFeature.Delegates.AlignDimensionDelegate{`0}@)">
            <inheritdoc/>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.Features.CustomFeature.SwMacroFeatureDefinition`2.CreatePreviewGeometry(Xarial.XCad.SolidWorks.ISwApplication,Xarial.XCad.SolidWorks.Documents.ISwDocument,Xarial.XCad.SolidWorks.Features.CustomFeature.ISwMacroFeature{`0},`1,Xarial.XCad.Features.CustomFeature.Delegates.ShouldHidePreviewEditBodyDelegate{`0,`1}@,Xarial.XCad.Features.CustomFeature.Delegates.AssignPreviewBodyColorDelegate@)">
            <inheritdoc/>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.Features.CustomFeature.SwMacroFeatureDefinition`2.CreateGeometry(Xarial.XCad.SolidWorks.ISwApplication,Xarial.XCad.SolidWorks.Documents.ISwDocument,Xarial.XCad.SolidWorks.Features.CustomFeature.ISwMacroFeature{`0})">
            <inheritdoc/>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.Features.CustomFeature.SwMacroFeatureDefinition`2.CreatePreviewGeometry(Xarial.XCad.SolidWorks.ISwApplication,Xarial.XCad.SolidWorks.Documents.ISwDocument,Xarial.XCad.SolidWorks.Features.CustomFeature.ISwMacroFeature{`0},`1)">
            <inheritdoc/>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.Features.CustomFeature.SwMacroFeatureDefinition`2.CreatePreviewGeometry(Xarial.XCad.IXApplication,Xarial.XCad.Documents.IXDocument,Xarial.XCad.Features.CustomFeature.IXCustomFeature{`0},`1,Xarial.XCad.Features.CustomFeature.Delegates.ShouldHidePreviewEditBodyDelegate{`0,`1}@,Xarial.XCad.Features.CustomFeature.Delegates.AssignPreviewBodyColorDelegate@)">
            <inheritdoc/>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.Features.CustomFeature.SwMacroFeatureDefinition`2.Insert(Xarial.XCad.Documents.IXDocument,`0)">
            <inheritdoc/>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.Features.CustomFeature.SwMacroFeatureDefinition`2.OnEditDefinition(Xarial.XCad.SolidWorks.ISwApplication,Xarial.XCad.SolidWorks.Documents.ISwDocument,Xarial.XCad.SolidWorks.Features.CustomFeature.ISwMacroFeature{`0})">
            <inheritdoc/>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.Features.CustomFeature.SwMacroFeatureDefinition`2.OnRebuild(Xarial.XCad.SolidWorks.ISwApplication,Xarial.XCad.SolidWorks.Documents.ISwDocument,Xarial.XCad.SolidWorks.Features.CustomFeature.ISwMacroFeature{`0},Xarial.XCad.Features.CustomFeature.Delegates.AlignDimensionDelegate{`0}@)">
            <inheritdoc/>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.Features.CustomFeature.SwMacroFeatureDefinition`2.OnEditingStarted(Xarial.XCad.IXApplication,Xarial.XCad.Documents.IXDocument,Xarial.XCad.Features.CustomFeature.IXCustomFeature{`0},`1)">
            <summary>
            Called when macro feature is about to be edited before Property Manager Page is opened
            </summary>
            <param name="app">Application</param>
            <param name="doc">Document</param>
            <param name="feat">Feature being edited (null if feature is being inserted)</param>
            <param name="page">Page data</param>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.Features.CustomFeature.SwMacroFeatureDefinition`2.OnEditingCompleting(Xarial.XCad.IXApplication,Xarial.XCad.Documents.IXDocument,Xarial.XCad.Features.CustomFeature.IXCustomFeature{`0},`1,Xarial.XCad.UI.PropertyPage.Enums.PageCloseReasons_e)">
            <summary>
            Called when macro feature is finishing editing and Property Manager Page is about to be closed
            </summary>
            <param name="app">Application</param>
            <param name="doc">Document</param>
            <param name="feat">Feature being edited</param>
            <param name="page">Page data</param>
            <param name="reason">Closing reason</param>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.Features.CustomFeature.SwMacroFeatureDefinition`2.OnEditingCompleted(Xarial.XCad.IXApplication,Xarial.XCad.Documents.IXDocument,Xarial.XCad.Features.CustomFeature.IXCustomFeature{`0},`1,Xarial.XCad.UI.PropertyPage.Enums.PageCloseReasons_e)">
            <summary>
            Called when macro feature is finished editing and Property Manager Page is closed
            </summary>
            <param name="app">Application</param>
            <param name="doc">Document</param>
            <param name="feat">Feature being edited</param>
            <param name="page">Page data</param>
            <param name="reason">Closing reason</param>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.Features.CustomFeature.SwMacroFeatureDefinition`2.OnFeatureInserting(Xarial.XCad.IXApplication,Xarial.XCad.Documents.IXDocument,Xarial.XCad.Features.CustomFeature.IXCustomFeature{`0},`1)">
            <summary>
            Called when macro feature is being created
            </summary>
            <param name="app">Application</param>
            <param name="doc">Document</param>
            <param name="feat">Feature which is being created (this feature is in not-committed state)</param>
            <param name="page">Page data</param>
            <remarks>Call <see cref="M:Xarial.XCad.Base.IXTransaction.Commit(System.Threading.CancellationToken)"/> on the feature to insert it into the tree</remarks>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.Features.CustomFeature.SwMacroFeatureDefinition`2.OnPreviewUpdated(Xarial.XCad.IXApplication,Xarial.XCad.Documents.IXDocument,Xarial.XCad.Features.CustomFeature.IXCustomFeature{`0},`1)">
            <summary>
            Called when the preview of the macro feature updated
            </summary>
            <param name="app">Application</param>
            <param name="doc">Document</param>
            <param name="feat">Feature being edited</param>
            <param name="page">Current page data</param>
            <remarks>Use <see cref="M:Xarial.XCad.SolidWorks.Features.CustomFeature.SwMacroFeatureDefinition`2.ShouldUpdatePreview(`0,`0,`1,System.Boolean)"/> to control if preview needs to be updated</remarks>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.Features.CustomFeature.SwMacroFeatureDefinition`2.CreateDynamicControls(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.Features.CustomFeature.SwMacroFeatureDefinition`2.ProvidePreviewContext(Xarial.XCad.Documents.IXDocument)">
            <summary>
            Context for the preview of this document
            </summary>
            <param name="doc">Current document</param>
            <returns>Either <see cref="T:Xarial.XCad.Documents.IXPart"/> or <see cref="T:Xarial.XCad.Documents.IXComponent"/></returns>
        </member>
        <member name="T:Xarial.XCad.SolidWorks.Features.CustomFeature.ISwMacroFeatureEditBody">
            <summary>
            Edit body represents the body which is edited in the macro feature (decorated with <see cref="T:Xarial.XCad.Features.CustomFeature.Attributes.ParameterEditBodyAttribute"/>)
            Use <see cref="M:Xarial.XCad.SolidWorks.Features.CustomFeature.SwMacroFeatureDefinition.CreateEditBody(SolidWorks.Interop.sldworks.IBody2,Xarial.XCad.SolidWorks.Documents.ISwDocument,Xarial.XCad.SolidWorks.ISwApplication,System.Boolean)"/> to create an instance of edit body
            </summary>
            <remarks>Body used in the regeneration is mix of the temp body and real body (e.g. it supports boolean operations with temp bodies)
            For the cosistent access in the preview <see cref="T:Xarial.XCad.SolidWorks.Features.CustomFeature.ISwMacroFeatureEditBody"/> is added which represents both temp body (in preview mode) and permanent body in the regeneration</remarks>
        </member>
        <member name="T:Xarial.XCad.SolidWorks.Features.CustomFeature.Toolkit.SwDimensionPlaceholder">
            <summary>
            This is a mock implementation of display SOLIDWORKS dimension
            It is used in <see cref="!:XCad.Features.CustomFeature.Services.IParameterConverter.ConvertDisplayDimensions(XCad.Documents.IXDocument, XCad.Features.CustomFeature.IXCustomFeature, Xarial.XCad.Annotations.IXDimension[])"/>
            for supporting the backward compatibility of macro feature parameters
            </summary>
        </member>
        <member name="T:Xarial.XCad.SolidWorks.Features.SwFeatureManager">
            <inheritdoc/>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.Features.SwFeatureManager.CreateCustomFeature``3(``1)">
            <inheritdoc/>
        </member>
        <member name="P:Xarial.XCad.SolidWorks.Features.ISwPlane.RefPlane">
            <summary>
            Pointer to the referenced plane feature
            </summary>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.Geometry.Evaluation.SwLegacyMassProperty.ValidateCalculations(SolidWorks.Interop.sldworks.IMassProperty)">
            <summary>
            Sometimes mass cannot be calculated and no error returned (model rebuilding is required)
            </summary>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.Geometry.Evaluation.SwMassProperty.ValidateCalculations(SolidWorks.Interop.sldworks.IMassProperty2)">
            <summary>
            Sometimes mass cannot be calculated and no error returned (model rebuilding is required)
            </summary>
        </member>
        <member name="T:Xarial.XCad.SolidWorks.Geometry.Exceptions.InvalidMassPropertyCalculationException">
            <summary>
            Exception indicates that calculation of mass properties has failed
            </summary>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.Geometry.Exceptions.InvalidMassPropertyCalculationException.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Xarial.XCad.SolidWorks.Geometry.Exceptions.MassPropertiesHiddenComponentBodiesNotSupported">
            <summary>
            IMassProperty API does not support option to specify to include or exclude hidden bodies or components (this option is always default to include hidden)
            This excepion indicates that mass cannot be calculated for the assembly which has hidden bodies while <see cref="P:Xarial.XCad.Base.IEvaluation.VisibleOnly"/> is set to True
            </summary>
        </member>
        <member name="T:Xarial.XCad.SolidWorks.Geometry.Exceptions.MomentOfInertiaOverridenException">
            <summary>
            IMassProperty API in SOLIDOWRKS 2019 failed to correctly calculate the Moment Of Intertia for the components
            </summary>
        </member>
        <member name="T:Xarial.XCad.SolidWorks.Geometry.Exceptions.NotLoadedMassPropertyComponentException">
            <summary>
            SOLIDOWORKS API limitation of not-loaded components mass property calculation in SOLIDWORKS 2019 or older
            </summary>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.Geometry.Exceptions.NotLoadedMassPropertyComponentException.#ctor(Xarial.XCad.Documents.IXComponent)">
            <summary>
            Default constructor
            </summary>
            <param name="comp">Component</param>
        </member>
        <member name="T:Xarial.XCad.SolidWorks.Geometry.Exceptions.PrincipalAxesOfInertiaOverridenException">
            <summary>
            IMassProperty API in SOLIDOWRKS 2019 failed to correctly calculate the Principal Axes Of Inertia for the components
            </summary>
        </member>
        <member name="T:Xarial.XCad.SolidWorks.Geometry.Exceptions.PrincipalMomentOfInertiaOverridenException">
            <summary>
            IMassProperty API in SOLIDOWRKS 2019 failed to correctly calculate the Principal Moment Of Intertia for the components
            </summary>
        </member>
        <member name="P:Xarial.XCad.SolidWorks.Geometry.ISwRegion.OuterLoop">
            <summary>
            Boundary of this region
            </summary>
        </member>
        <member name="P:Xarial.XCad.SolidWorks.Geometry.ISwRegion.InnerLoops">
            <summary>
            Inner loops in the region
            </summary>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.Geometry.SwTempBody.Substract(Xarial.XCad.SolidWorks.Geometry.ISwTempBody)">
            <remarks>Empty array can be returned if bodies are equal</remarks>
        </member>
        <member name="T:Xarial.XCad.SolidWorks.Services.CommandGroupTabConfiguration">
            <summary>
            Configuration information of the tab
            </summary>
        </member>
        <member name="P:Xarial.XCad.SolidWorks.Services.CommandGroupTabConfiguration.TabName">
            <summary>
            Name of the tab
            </summary>
        </member>
        <member name="P:Xarial.XCad.SolidWorks.Services.CommandGroupTabConfiguration.Include">
            <summary>
            True if the tab should be created, False if not
            </summary>
        </member>
        <member name="T:Xarial.XCad.SolidWorks.Services.ICommandGroupTabConfigurer">
            <summary>
            Service to configure tabs
            </summary>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.Services.ICommandGroupTabConfigurer.ConfigureTab(Xarial.XCad.UI.Commands.Structures.CommandGroupSpec,Xarial.XCad.SolidWorks.Services.CommandGroupTabConfiguration)">
            <summary>
            Called when command tab is created
            </summary>
            <param name="cmdGrpSpec">Specification of the group</param>
            <param name="config">Configuration of the tab</param>
        </member>
        <member name="T:Xarial.XCad.SolidWorks.Services.DefaultCommandGroupTabConfigurer">
            <summary>
            Default tab configuration
            </summary>
            <remarks>This configurer uses the default options and acts as a placeholder.
            User can register custom <see cref="T:Xarial.XCad.SolidWorks.Services.ICommandGroupTabConfigurer"/> service to configure the behavior of tabs</remarks>
        </member>
        <member name="T:Xarial.XCad.SolidWorks.Services.ICalloutHandlerProvider">
            <summary>
            Handler for the callout when used with <see cref="M:Xarial.XCad.Documents.IXDocumentGraphics.PreCreateCallout"/>
            </summary>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.Services.ICalloutHandlerProvider.CreateHandler(Xarial.XCad.SolidWorks.ISwApplication)">
            <summary> This function is called when new handler instance needs to be created</summary>
             <param name="app">Pointer to SOLIDWORKS application</param>
             <returns>Callout handler</returns>
             <remarks>The class must be com-visible. Provide new instance of the handler with each call</remarks>
        </member>
        <member name="T:Xarial.XCad.SolidWorks.Services.IDragArrowHandlerProvider">
            <summary>
            Handler for the drag arrow when used with <see cref="M:Xarial.XCad.Documents.IXDocumentGraphics.PreCreateDragArrow"/>
            </summary>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.Services.IDragArrowHandlerProvider.CreateHandler(Xarial.XCad.SolidWorks.ISwApplication)">
            <summary> This function is called when new handler instance needs to be created</summary>
             <param name="app">Pointer to SOLIDWORKS application</param>
             <returns>Drag arrow handler</returns>
             <remarks>The class must be com-visible. Provide new instance of the handler with each call</remarks>
        </member>
        <member name="T:Xarial.XCad.SolidWorks.Services.IMemoryGeometryBuilderToleranceProvider">
            <summary>
            Service provides tolerance values to perform operations in the <see cref="T:Xarial.XCad.Geometry.IXMemoryGeometryBuilder"/>
            </summary>
        </member>
        <member name="P:Xarial.XCad.SolidWorks.Services.IMemoryGeometryBuilderToleranceProvider.Knitting">
            <summary>
            Tolerance for bodies knitting operations
            </summary>
            <remarks>Used in IModeler::CreateBodiesFromSheets2</remarks>
        </member>
        <member name="P:Xarial.XCad.SolidWorks.Services.IMemoryGeometryBuilderToleranceProvider.Trimming">
            <summary>
            Tolerance for trimming the sheet bodies
            </summary>
            <remarks>Used in ISurface::CreateTrimmedSheet5</remarks>
        </member>
        <member name="P:Xarial.XCad.SolidWorks.Services.IMemoryGeometryBuilderToleranceProvider.Numeric">
            <summary>
            Tolerance for comparing numbers
            </summary>
        </member>
        <member name="P:Xarial.XCad.SolidWorks.Services.IMemoryGeometryBuilderToleranceProvider.Length">
            <summary>
            Tolerance for comparing lengths
            </summary>
        </member>
        <member name="P:Xarial.XCad.SolidWorks.Services.IMemoryGeometryBuilderToleranceProvider.Angle">
            <summary>
            Tolerance for comparing angles
            </summary>
        </member>
        <member name="T:Xarial.XCad.SolidWorks.Services.IPropertyPageHandlerProvider">
            <summary>
            Handler for the drag arrow when used with <see cref="M:Xarial.XCad.Extensions.IXExtension.CreatePage``1(Xarial.XCad.UI.PropertyPage.Delegates.CreateDynamicControlsDelegate)"/>
            </summary>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.Services.IPropertyPageHandlerProvider.CreateHandler(Xarial.XCad.SolidWorks.ISwApplication,System.Type)">
            <summary> This function is called when new handler instance needs to be created</summary>
            <param name="handlerType">Type of the handler</param>
             <param name="app">Pointer to SOLIDWORKS application</param>
             <returns>Property page handler</returns>
             <remarks>The class must be com-visible. Provide new instance of the handler with each call</remarks>
        </member>
        <member name="T:Xarial.XCad.SolidWorks.Services.ITriadHandlerProvider">
            <summary>
            Handler for the callout when used with <see cref="M:Xarial.XCad.Documents.IXDocumentGraphics.PreCreateTriad"/>
            </summary>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.Services.ITriadHandlerProvider.CreateHandler(Xarial.XCad.SolidWorks.ISwApplication)">
            <summary> This function is called when new handler instance needs to be created</summary>
             <param name="app">Pointer to SOLIDWORKS application</param>
             <returns>Triad handler</returns>
             <remarks>The class must be com-visible. Provide new instance of the handler with each call</remarks>
        </member>
        <member name="T:Xarial.XCad.SolidWorks.Services.SwFilePathResolverBase">
            <summary>
            Resolves the reference path for the document
            </summary>
            <remarks>This logic implemented according to <see href="https://help.solidworks.com/2016/english/SolidWorks/sldworks/c_Search_Routine_for_Referenced_Documents.htm"/></remarks>
        </member>
        <member name="P:Xarial.XCad.SolidWorks.Sketch.ISwSketchPicture.SketchPicture">
            <summary>
            Pointer to the sketch picture
            </summary>
        </member>
        <member name="P:Xarial.XCad.SolidWorks.Sketch.SwSketchPicture.OwnerBlock">
            <remarks>
            Sketch picture in SOLIDWORKS cannot be added into the block
            </remarks>
        </member>
        <member name="T:Xarial.XCad.SolidWorks.SwAddInEx">
            <inheritdoc/>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.SwAddInEx.RegisterFunction(System.Type)">
            <summary>
            COM Registration entry function
            </summary>
            <param name="t">Type</param>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.SwAddInEx.UnregisterFunction(System.Type)">
            <summary>
            COM Unregistration entry function
            </summary>
            <param name="t">Type</param>
        </member>
        <member name="P:Xarial.XCad.SolidWorks.SwAddInEx.AddInId">
            <summary>
            Add-ins cookie (id)
            </summary>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.SwAddInEx.OnCommandClick(System.String)">
            <summary>
            Command click callback
            </summary>
            <param name="cmdId">Command tag</param>
        </member>
        <member name="T:Xarial.XCad.SolidWorks.SwPartnerAddInEx">
            <inheritdoc/>
        </member>
        <member name="T:Xarial.XCad.SolidWorks.SwApplication">
            <inheritdoc/>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.SwApplication.#ctor(SolidWorks.Interop.sldworks.ISldWorks,System.Action{Xarial.XCad.SolidWorks.SwApplication})">
            <summary>
            Only to be used within SwAddInEx
            </summary>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.SwApplication.#ctor">
            <Remarks>
            Used for <see cref="M:Xarial.XCad.SolidWorks.SwApplicationFactory.PreCreate"/>
            </Remarks>
        </member>
        <member name="T:Xarial.XCad.SolidWorks.SwApplicationExtension">
            <summary>
            Additional methods of <see cref="T:Xarial.XCad.SolidWorks.ISwApplication"/>
            </summary>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.SwApplicationExtension.IsVersionNewerOrEqual(Xarial.XCad.SolidWorks.ISwApplication,Xarial.XCad.SolidWorks.Enums.SwVersion_e,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Checks if the current version of the SOLIDWORKS applicating equals or newver than the specified version
            </summary>
            <param name="app">Application</param>
            <param name="version">Major version</param>
            <param name="servicePack">Service pack</param>
            <param name="servicePackRev">Revision</param>
            <returns>True if current version is newer or equal</returns>
            <remarks>Use this method for forward compatibility</remarks>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.SwApplicationExtension.IsInProcess(Xarial.XCad.SolidWorks.ISwApplication)">
            <summary>
            Checks if currently running application is in-process application
            </summary>
            <param name="app">Application</param>
            <returns>True if in process</returns>
            <remarks>This method also checks the UI thread</remarks>
        </member>
        <member name="T:Xarial.XCad.SolidWorks.SwApplicationFactory">
            <summary>
            Factory for creating <see cref="T:Xarial.XCad.SolidWorks.ISwApplication"/>
            </summary>
        </member>
        <member name="F:Xarial.XCad.SolidWorks.SwApplicationFactory.CommandLineArguments.SafeMode">
            <summary>
            Bypasses the Tools/Options settings
            </summary>
        </member>
        <member name="F:Xarial.XCad.SolidWorks.SwApplicationFactory.CommandLineArguments.BackgroundMode">
            <summary>
            Runs SOLIDWORKS in background model via SOLIDWORKS Task Scheduler (requires SOLIDWORKS Professional or higher)
            </summary>
        </member>
        <member name="F:Xarial.XCad.SolidWorks.SwApplicationFactory.CommandLineArguments.SilentMode">
            <summary>
            Suppresses all popup messages, including the splash screen
            </summary>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.SwApplicationFactory.DisableAllAddInsStartup(System.Collections.Generic.IReadOnlyList{System.String}@)">
            <summary>
            Disables all startup add-ins
            </summary>
            <param name="disabledAddInGuids">Guids of the disabled add-ins</param>
            <remarks>Call the <see cref="M:Xarial.XCad.SolidWorks.SwApplicationFactory.EnableAddInsStartup(System.Collections.Generic.IReadOnlyList{System.String})"/> to restore the add-ins</remarks>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.SwApplicationFactory.EnableAddInsStartup(System.Collections.Generic.IReadOnlyList{System.String})">
            <summary>
            Enables the add-ins at startup
            </summary>
            <param name="addInGuids">Add-in guids</param>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.SwApplicationFactory.PreCreate">
            <summary>
            Pre-creates a template for SOLIDWORKS application
            </summary>
            <returns></returns>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.SwApplicationFactory.GetInstalledVersions">
            <summary>
            Returns all installed SOLIDWORKS versions
            </summary>
            <returns>Enumerates versions</returns>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.SwApplicationFactory.FromPointer(SolidWorks.Interop.sldworks.ISldWorks)">
            <summary>
            Creates <see cref="T:Xarial.XCad.SolidWorks.ISwApplication"/> from SOLIDWORKS pointer
            </summary>
            <param name="app">Pointer to SOLIDWORKS application</param>
            <returns>Instance of <see cref="T:Xarial.XCad.SolidWorks.ISwApplication"/></returns>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.SwApplicationFactory.FromPointer(SolidWorks.Interop.sldworks.ISldWorks,Xarial.XCad.IXServiceCollection)">
            <inheritdoc cref="M:Xarial.XCad.SolidWorks.SwApplicationFactory.FromPointer(SolidWorks.Interop.sldworks.ISldWorks)"/>
            <param name="services">Custom serives</param>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.SwApplicationFactory.FromProcess(System.Diagnostics.Process)">
            <summary>
            Creates instance of SOLIDWORKS from SLDWORKS.exe process
            </summary>
            <param name="process">SLDWORKS.exe process</param>
            <returns>Pointer to <see cref="T:Xarial.XCad.SolidWorks.ISwApplication"/></returns>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.SwApplicationFactory.FromProcess(System.Diagnostics.Process,Xarial.XCad.IXServiceCollection)">
            <inheritdoc cref="M:Xarial.XCad.SolidWorks.SwApplicationFactory.FromProcess(System.Diagnostics.Process)"/>
            <param name="services">Custom serives</param>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.SwApplicationFactory.Create(System.Nullable{Xarial.XCad.SolidWorks.Enums.SwVersion_e},Xarial.XCad.Enums.ApplicationState_e,System.Threading.CancellationToken)">
            <summary>
            Starts new application
            </summary>
            <param name="vers">Version or null for the latest</param>
            <param name="state">State of the application</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Created application</returns>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.SwApplicationFactory.CreateVersion(Xarial.XCad.SolidWorks.Enums.SwVersion_e)">
            <summary>
            Creates instance of SOLIDWORKS version from the major version
            </summary>
            <param name="vers"></param>
            <returns></returns>
        </member>
        <member name="T:Xarial.XCad.SolidWorks.ISwObject">
            <summary>
            Represents base interface for all SOLIDWORKS objects
            </summary>
        </member>
        <member name="P:Xarial.XCad.SolidWorks.ISwObject.Dispatch">
            <summary>
            SOLIDWORKS specific dispatch
            </summary>
        </member>
        <member name="T:Xarial.XCad.SolidWorks.SwObject">
            <inheritdoc/>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.SwObject.GetSerializationDispatch">
            <summary>
            In some instances it is required to serialize different dispatch (e.g. specific or base feature)
            </summary>
            <returns></returns>
        </member>
        <member name="T:Xarial.XCad.SolidWorks.SwObjectFactory">
            <summary>
            Factory for xCAD objects
            </summary>
        </member>
        <member name="T:Xarial.XCad.SolidWorks.SwSelObject">
            <inheritdoc/>
        </member>
        <member name="T:Xarial.XCad.SolidWorks.UI.Commands.Attributes.SwContextMenuCommandGroupInfoAttribute">
            <summary>
            SOLIDWORKS specific context command menu spec
            </summary>
        </member>
        <member name="P:Xarial.XCad.SolidWorks.UI.Commands.Attributes.SwContextMenuCommandGroupInfoAttribute.Owner">
            <summary>
            Selection type of the owner for this context menu
            </summary>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.UI.Commands.Attributes.SwContextMenuCommandGroupInfoAttribute.#ctor(System.Int32,SolidWorks.Interop.swconst.swSelectType_e)">
            <summary>
            Default construcotr
            </summary>
            <param name="owner">selection type of the owner for this context menu</param>
        </member>
        <member name="T:Xarial.XCad.SolidWorks.UI.Commands.Exceptions.GroupIdAlreadyExistsException">
            <summary>
            Exception indicates that specified group user id is already used
            </summary>
            <remarks>This might happen when <see cref="T:Xarial.XCad.UI.Commands.Attributes.CommandGroupInfoAttribute"/> explicitly specifies duplicate user ids.
            This can also happen that not all commands have this attribute assigned explicitly.
            In this case framework is attempting to generate next user id which might be already taken by explicit declaration</remarks>
        </member>
        <member name="T:Xarial.XCad.SolidWorks.UI.Commands.Exceptions.InvalidMenuToolbarOptionsException">
            <summary>
            Indicates that the command doesn't have either menu or toolbar option set
            </summary>
        </member>
        <member name="P:Xarial.XCad.SolidWorks.UI.Commands.ISwCommandGroup.IsContextMenu">
            <summary>
            Indicates if this group is context menu
            </summary>
        </member>
        <member name="P:Xarial.XCad.SolidWorks.UI.Commands.ISwCommandGroup.CommandGroup">
            <summary>
            SOLIDWORKS specific command group
            </summary>
        </member>
        <member name="T:Xarial.XCad.SolidWorks.UI.Commands.SwCommandGroup">
            <inheritdoc/>
        </member>
        <member name="E:Xarial.XCad.SolidWorks.UI.Commands.SwCommandGroup.CommandClick">
            <inheritdoc/>
        </member>
        <member name="E:Xarial.XCad.SolidWorks.UI.Commands.SwCommandGroup.CommandStateResolve">
            <inheritdoc/>
        </member>
        <member name="P:Xarial.XCad.SolidWorks.UI.Commands.SwCommandGroup.CommandGroup">
            <inheritdoc/>
        </member>
        <member name="P:Xarial.XCad.SolidWorks.UI.Commands.SwCommandGroup.Spec">
            <inheritdoc/>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.UI.Commands.SwCommandGroup.ResolveState(Xarial.XCad.UI.Commands.Structures.CommandState,Xarial.XCad.UI.Commands.Enums.WorkspaceTypes_e)">
            <remarks>Using this method instead of the generic extension trying to improve the performance
            as this method is called frequently and finding the document from documents collection invokes several APIs as per the equality comparer</remarks>
        </member>
        <member name="P:Xarial.XCad.SolidWorks.UI.Commands.ISwCommandManager.CmdMgr">
            <summary>
            Pointer to command group which holding the add-in commands
            </summary>
        </member>
        <member name="T:Xarial.XCad.SolidWorks.UI.Commands.SwCommandManager">
            <inheritdoc/>
        </member>
        <member name="P:Xarial.XCad.SolidWorks.UI.Commands.SwCommandManager.CmdMgr">
            <inheritdoc/>
        </member>
        <member name="T:Xarial.XCad.SolidWorks.UI.Commands.Toolkit.Enums.CommandItemEnableState_e">
            <summary>
            Enumerates the possible states of the command (toolbar button or menu item) in SOLIDWORKS
            </summary>
        </member>
        <member name="F:Xarial.XCad.SolidWorks.UI.Commands.Toolkit.Enums.CommandItemEnableState_e.DeselectDisable">
            <summary>
            Deselects and disables the item
            </summary>
        </member>
        <member name="F:Xarial.XCad.SolidWorks.UI.Commands.Toolkit.Enums.CommandItemEnableState_e.DeselectEnable">
            <summary>
            Deselects and enables the item; this is the default state if no update function is specified
            </summary>
        </member>
        <member name="F:Xarial.XCad.SolidWorks.UI.Commands.Toolkit.Enums.CommandItemEnableState_e.SelectDisable">
            <summary>
            Selects and disables the item
            </summary>
        </member>
        <member name="F:Xarial.XCad.SolidWorks.UI.Commands.Toolkit.Enums.CommandItemEnableState_e.SelectEnable">
            <summary>
            Selects and enables the item
            </summary>
        </member>
        <member name="T:Xarial.XCad.SolidWorks.UI.PropertyPage.Attributes.SwSelectionBoxOptionsAttribute">
            <summary>
            SOLIDWORKS specific selection box control
            </summary>
        </member>
        <member name="P:Xarial.XCad.SolidWorks.UI.PropertyPage.Attributes.SwSelectionBoxOptionsAttribute.Filters">
            <summary>
            Allowed entities filter for the selection
            </summary>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.UI.PropertyPage.Attributes.SwSelectionBoxOptionsAttribute.#ctor(SolidWorks.Interop.swconst.swSelectType_e[])">
            <summary>
            Default constructors
            </summary>
            <param name="filters">Array of selection filters</param>
        </member>
        <member name="T:Xarial.XCad.SolidWorks.UI.PropertyPage.SwPropertyManagerPage`1">
            <inheritdoc/>
        </member>
        <member name="E:Xarial.XCad.SolidWorks.UI.PropertyPage.SwPropertyManagerPage`1.Closed">
            <inheritdoc/>
        </member>
        <member name="E:Xarial.XCad.SolidWorks.UI.PropertyPage.SwPropertyManagerPage`1.Closing">
            <inheritdoc/>
        </member>
        <member name="E:Xarial.XCad.SolidWorks.UI.PropertyPage.SwPropertyManagerPage`1.DataChanged">
            <inheritdoc/>
        </member>
        <member name="E:Xarial.XCad.SolidWorks.UI.PropertyPage.SwPropertyManagerPage`1.KeystrokeHook">
            <inheritdoc/>
        </member>
        <member name="P:Xarial.XCad.SolidWorks.UI.PropertyPage.SwPropertyManagerPage`1.Model">
            <inheritdoc/>
        </member>
        <member name="P:Xarial.XCad.SolidWorks.UI.PropertyPage.SwPropertyManagerPage`1.IsPinned">
            <inheritdoc/>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.UI.PropertyPage.SwPropertyManagerPage`1.#ctor(Xarial.XCad.SolidWorks.SwApplication,System.IServiceProvider,Xarial.XCad.SolidWorks.UI.PropertyPage.SwPropertyManagerPageHandler,Xarial.XCad.UI.PropertyPage.Delegates.CreateDynamicControlsDelegate)">
            <summary>Creates instance of property manager page</summary>
            <param name="app">Pointer to session of SOLIDWORKS where the property manager page to be created</param>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.UI.PropertyPage.SwPropertyManagerPage`1.Show(`0)">
            <inheritdoc/>
        </member>
        <member name="T:Xarial.XCad.SolidWorks.UI.PropertyPage.SwPropertyManagerPageHandler">
            <summary>
            Class which represents the handler of macro feature (system use only)
            </summary>
            <remarks>Class must be COM Visible, public and have parameterless constructor</remarks>
        </member>
        <member name="E:Xarial.XCad.SolidWorks.UI.PropertyPage.SwPropertyManagerPageHandler.Closing">
            <inheritdoc/>
        </member>
        <member name="E:Xarial.XCad.SolidWorks.UI.PropertyPage.SwPropertyManagerPageHandler.Closed">
            <inheritdoc/>
        </member>
        <member name="T:Xarial.XCad.SolidWorks.UI.PropertyPage.Toolkit.Controls.IPropertyManagerPageControlEx">
            <summary>
            Base wrapper around native SOLIDWORKS Property Manager Page controls (i.e. TextBox, SelectionBox, NumberBox etc.)
            </summary>
        </member>
        <member name="P:Xarial.XCad.SolidWorks.UI.PropertyPage.Toolkit.Controls.IPropertyManagerPageControlEx.SwControl">
            <summary>
            Pointer to the native SOLIDWORKS control of type <see href="http://help.solidworks.com/2012/english/api/sldworksapi/solidworks.interop.sldworks~solidworks.interop.sldworks.ipropertymanagerpagecontrol.html"/>
            </summary>
        </member>
        <member name="T:Xarial.XCad.SolidWorks.UI.PropertyPage.Toolkit.Controls.PropertyManagerPageCheckBoxList">
            <summary>
            Wrapper class around the group of <see href="http://help.solidworks.com/2016/english/api/sldworksapi/solidworks.interop.sldworks~solidworks.interop.sldworks.ipropertymanagerpagecheckbox.html">IPropertyManagerPageCheckbox</see> controls
            </summary>
            <remarks>All set properties will be applied to all controls in the group, while get will return the value of first control</remarks>
        </member>
        <member name="P:Xarial.XCad.SolidWorks.UI.PropertyPage.Toolkit.Controls.PropertyManagerPageControlList`1.Controls">
            <summary>
            Array of controls in the current controls list
            </summary>
        </member>
        <member name="T:Xarial.XCad.SolidWorks.UI.PropertyPage.Toolkit.Controls.IPropertyManagerPageElementEx">
            <summary>
            Represents the base interface for elements in property manager page (e.g. controls, groups, tabs)
            </summary>
        </member>
        <member name="P:Xarial.XCad.SolidWorks.UI.PropertyPage.Toolkit.Controls.IPropertyManagerPageElementEx.Enabled">
            <summary>
            Enable state of this control
            </summary>
        </member>
        <member name="P:Xarial.XCad.SolidWorks.UI.PropertyPage.Toolkit.Controls.IPropertyManagerPageElementEx.Visible">
            <summary>
            Visibility state of the control
            </summary>
        </member>
        <member name="T:Xarial.XCad.SolidWorks.UI.PropertyPage.Toolkit.Controls.PropertyManagerPageElement">
            <summary>
            List of extension methods of property manager page element
            </summary>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.UI.PropertyPage.Toolkit.Controls.PropertyManagerPageElement.GetValue``1(Xarial.XCad.SolidWorks.UI.PropertyPage.Toolkit.Controls.IPropertyManagerPageElementEx)">
            <summary>
            Gets the value from the property manager page element
            </summary>
            <typeparam name="T">Type of the control value</typeparam>
            <param name="elem">Property Manager Page element</param>
            <returns>Value extracted from the control</returns>
            <exception cref="T:System.InvalidCastException"/>
            <exception cref="T:System.NotSupportedException"/>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.UI.PropertyPage.Toolkit.Controls.PropertyManagerPageElement.GetSwControl``1(Xarial.XCad.SolidWorks.UI.PropertyPage.Toolkit.Controls.IPropertyManagerPageElementEx)">
            <summary>
            Gets the underlying SOLIDWORKS Property Manager Page control
            </summary>
            <typeparam name="T">Type of control to return</typeparam>
            <param name="elem">Property Manager Page element</param>
            <returns>Underlying control in the Property Manager Page</returns>
            <exception cref="T:System.InvalidCastException"/>
            <exception cref="T:System.NotSupportedException"/>
            <remarks>For controls specify <see href="http://help.solidworks.com/2017/English/api/sldworksapi/SolidWorks.Interop.sldworks~SolidWorks.Interop.sldworks.IPropertyManagerPageControl.html">IPropertyManagerPageControl</see> as a generic parameter to return base interface for control.
            You can also specify specific interfaces (e.g.  <see href="https://help.solidworks.com/2017/English/api/sldworksapi/SolidWorks.Interop.sldworks~SolidWorks.Interop.sldworks.IPropertyManagerPageNumberbox.html">IPropertyManagerPageNumberbox</see> or <see href="https://help.solidworks.com/2017/English/api/sldworksapi/SolidWorks.Interop.sldworks~SolidWorks.Interop.sldworks.IPropertyManagerPageTextbox.html">IPropertyManagerPageTextbox</see>.
            For groups specify <see href="http://help.solidworks.com/2017/English/api/sldworksapi/SolidWorks.Interop.sldworks~SolidWorks.Interop.sldworks.IPropertyManagerPageGroup.html">IPropertyManagerPageGroup</see>.
            For tabs specify <see href="http://help.solidworks.com/2017/English/api/sldworksapi/SolidWorks.Interop.sldworks~SolidWorks.Interop.sldworks.IPropertyManagerPageTab.html">IPropertyManagerPageTab</see>
            </remarks>
        </member>
        <member name="T:Xarial.XCad.SolidWorks.UI.PropertyPage.Toolkit.Controls.IPropertyManagerPageGroupEx">
            <summary>
            Represents the group box control
            </summary>
        </member>
        <member name="P:Xarial.XCad.SolidWorks.UI.PropertyPage.Toolkit.Controls.IPropertyManagerPageGroupEx.Group">
            <summary>
            Pointer to the underlying group box
            </summary>
        </member>
        <member name="P:Xarial.XCad.SolidWorks.UI.PropertyPage.Toolkit.Controls.PropertyManagerPageGroupControl.Enabled">
            <summary>
            Not supported
            </summary>
        </member>
        <member name="P:Xarial.XCad.SolidWorks.UI.PropertyPage.Toolkit.Controls.PropertyManagerPageGroupControl.Visible">
            <inheritdoc/>
        </member>
        <member name="T:Xarial.XCad.SolidWorks.UI.PropertyPage.Toolkit.Controls.PropertyManagerPageOptionBox">
            <summary>
            Wrapper class around the group of <see href="http://help.solidworks.com/2016/english/api/sldworksapi/solidworks.interop.sldworks~solidworks.interop.sldworks.ipropertymanagerpageoption.html">IPropertyManagerPageOption </see> controls
            </summary>
            <remarks>All set properties will be applied to all controls in the group, while get will return the value of first control</remarks>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.UI.PropertyPage.Toolkit.Controls.PropertyManagerPageSelectionBoxControl.ResolveCurrentValue">
            <summary>
            Resolves the current values based on the selection
            </summary>
            <returns>List of objects or selection object</returns>
            <remarks>This method is called when selection is changed. The value is cached because ItemCount is 0 within the SubmitSelection notification
            which is causing the issue in the custom selection filter as the value returned is empty</remarks>
        </member>
        <member name="P:Xarial.XCad.SolidWorks.UI.PropertyPage.Toolkit.Controls.IPropertyManagerPageTabEx.Tab">
            <summary>
            Pointer to the underlying tab box
            </summary>
        </member>
        <member name="P:Xarial.XCad.SolidWorks.UI.PropertyPage.Toolkit.Controls.PropertyManagerPageTabControl.Enabled">
            <summary>
            Not supported
            </summary>
        </member>
        <member name="P:Xarial.XCad.SolidWorks.UI.PropertyPage.Toolkit.Controls.PropertyManagerPageTabControl.Visible">
            <summary>
            Not supported
            </summary>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.UI.PropertyPage.Toolkit.Icons.BitmapButtonHighResIcon.AdjustSize(System.Int32,System.Int32)">
            <summary>
            Adjusting the size of the icons to match older version of SOLIDWORKS, so if add-in is updated from 2016 - the size of buttons remains the same
            </summary>
        </member>
        <member name="T:Xarial.XCad.SolidWorks.UI.Toolkit.IAutoDisposable">
            <summary>
            Indicates that this item will be disposed when main add-in is unloaded
            </summary>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.Utils.CompatibilityUtils.GetVersion(SolidWorks.Interop.sldworks.ISldWorks,System.Int32@,System.Int32@)">
            <summary>
            Returns the major version of SOLIDWORKS application
            </summary>
            <param name="app">Pointer to application to return version from</param>
            <param name="servicePack">Version of Service Pack</param>
            <param name="servicePackRev">Revision of Service Pack</param>
            <returns>Major version of the application</returns>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.Utils.CompatibilityUtils.IsVersionNewerOrEqual(SolidWorks.Interop.sldworks.ISldWorks,Xarial.XCad.SolidWorks.Enums.SwVersion_e,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Checks if the version of the SOLIDWORKS is newer or equal to the specified parameters
            </summary>
            <param name="app">Current SOLIDWORKS application</param>
            <param name="version">Target minimum supported version of SOLIDWORKS</param>
            <param name="servicePack">Target minimum service pack version or null to ignore</param>
            <param name="servicePackRev">Target minimum revision of service pack version or null to ignore</param>
            <returns>True of version of the SOLIDWORKS is the same or newer</returns>
        </member>
        <member name="T:Xarial.XCad.SolidWorks.Utils.Context">
            <summary>
            This structure defines the owner of the specific object or entity
            </summary>
            <remarks>This structure is intended to handle the configuration specific entitites
            that are otherwise are not natively supported as configuration specific (e.g. feature, dimension)</remarks>
        </member>
        <member name="P:Xarial.XCad.SolidWorks.Utils.Context.Owner">
            <summary>
            Owner of this object
            </summary>
            <remarks>This is typically either <see cref="T:Xarial.XCad.Documents.IXDocument"/>, <see cref="T:Xarial.XCad.Documents.IXConfiguration"/> or <see cref="T:Xarial.XCad.Documents.IXComponent"/></remarks>
        </member>
        <member name="T:Xarial.XCad.SolidWorks.Utils.LegacyComponentMassProperty">
            <summary>
            Component specific mass property information
            </summary>
        </member>
        <member name="T:Xarial.XCad.SolidWorks.Utils.LegacyComponentMassPropertyLazy">
            <summary>
            Helper class to retrieve the IMassProperty for the specific component's model for workarounds purposes
            </summary>
        </member>
        <member name="T:Xarial.XCad.SolidWorks.Utils.OrderedComponentsCollection">
            <summary>
            This is a helper class for the components collection in the feature tree order
            </summary>
            <remarks>Features can only be traversed in the context of the active configuration, while components are configuration specific
            Excess features can be returned from the traverse (e.g. the features which are not used in this configuration or ghost components.
            This class is optimizing performance by using the Lazy pattern where possible</remarks>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.Utils.SelectionGroup.Add(System.Object,SolidWorks.Interop.sldworks.ISelectData)">
            <summary>
            Add object to current selection list
            </summary>
            <param name="disp">Pointer to dispatch</param>
            <param name="selData">Optional selection data</param>
            <returns>Result of selection</returns>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.Utils.SelectionGroup.AddRange(System.Object[],SolidWorks.Interop.sldworks.ISelectData)">
            <summary>
            Adds multiple objects into selection list
            </summary>
            <param name="disps">Array of dispatches to select</param>
            <param name="selData">Optional selection data</param>
            <returns>Result of the selection</returns>
        </member>
        <member name="T:Xarial.XCad.SolidWorks.Utils.TransformConverter">
            <summary>
            Utility to transform <see cref="T:Xarial.XCad.Geometry.Structures.TransformMatrix"/> and <see cref="T:SolidWorks.Interop.sldworks.IMathTransform"/>
            </summary>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.Utils.TransformConverter.ToTransformMatrix(SolidWorks.Interop.sldworks.IMathTransform)">
            <summary>
            Transforms SOLIDWORKS matrix to xCAD matrix
            </summary>
            <param name="transform">Matrix to transform</param>
            <returns>Transformed matrix</returns>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.Utils.TransformConverter.ToTransformMatrix(System.Double[])">
            <summary>
            Transforms data from SOLIDWORKS matrix <see cref="P:SolidWorks.Interop.sldworks.IMathTransform.ArrayData"/> to xCAD matrix
            </summary>
            <param name="data">Data tro transform</param>
            <returns>Transformed matrix</returns>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.Utils.TransformConverter.ToMathTransform(SolidWorks.Interop.sldworks.IMathUtility,Xarial.XCad.Geometry.Structures.TransformMatrix)">
            <summary>
            Transforms xCAD matrix to SOLIDWORKS transform
            </summary>
            <param name="mathUtils">SOLIDWORKS math utility</param>
            <param name="matrix">Matrix to transform</param>
            <returns>SOLIDWORKS transform</returns>
        </member>
        <member name="M:Xarial.XCad.SolidWorks.Utils.TransformConverter.ToMathTransformData(Xarial.XCad.Geometry.Structures.TransformMatrix)">
            <summary>
            Transforms xCAD matrix to SOLIDWORKS transform data <see cref="P:SolidWorks.Interop.sldworks.IMathTransform.ArrayData"/>
            </summary>
            <param name="matrix">Matrix to transform</param>
            <returns>SOLIDWORKS transform data</returns>
        </member>
        <member name="T:Xarial.XCad.SolidWorks.Utils.UiFreeze">
            <summary>
            Freezes feature tree and view
            </summary>
        </member>
        <member name="T:Xarial.XCad.SolidWorks.Utils.WpfControlKeystrokePropagator">
            <summary>
            Fixes the blocked keystrokes in WPF controls
            </summary>
            <remarks>WPF controls hosted in SOLIDWORKS will not handle keystrokes. This class fixes this issue</remarks>
        </member>
        <member name="P:Xarial.XCad.SolidWorks.Utils.XDrawingImage.Buffer">
            <inheritdoc/>
        </member>
    </members>
</doc>
